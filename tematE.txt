<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sprawozdanie PUBLIC "sprawozdanie" "http://faculty.wmi.amu.edu.pl:20002/zajecia/file-storage/view/sprawozdanie.dtd">
<sprawozdanie przedmiot="SIK" temat="E">
<imie_nazwisko>Wiktor Bałaban</imie_nazwisko>
<nr_indeksu>421824</nr_indeksu>
<liczba_pkt>14.5</liczba_pkt>// do opis 3 przykłąd 3
<zadanie nr="opis 1 przykład 1" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 2" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 3" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 4" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 5" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 6" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 7" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 8" pkt="0.5"></zadanie>
<zadanie nr="opis 1 przykład 9" pkt="0.5"></zadanie>
<zadanie nr="opis 1 zadanie 1" pkt="0.5"></zadanie>
<zadanie nr="opis 1 zadanie 2" pkt="0.5"></zadanie>
<zadanie nr="opis 1 zadanie 3" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 1" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 2" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 3" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 4" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 5" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 6" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 7" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 8" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 9" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 10" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 11" pkt="0.5"></zadanie>
<zadanie nr="opis 2 przykład 12" pkt="0.5"></zadanie>
<zadanie nr="opis 2 zadanie 1" pkt="0.5"></zadanie>
<zadanie nr="opis 2 zadanie 2" pkt="0.5"></zadanie>
<zadanie nr="opis 3 przykład 1" pkt="0.5"></zadanie>
<zadanie nr="opis 3 przykład 2" pkt="0.5"></zadanie>
<zadanie nr="opis 3 przykład 3" pkt="0.5"></zadanie>
</sprawozdanie>
opis 1 Przykład 1 -------------------------------------
pingujemy, widzimy jak serwer odpowiada na ping
/// wydruk

opis 1 Przykład 2 -------------------------------------
traceroot wysyła dla pewności po 3 datagramy z jedną wartością ttl, żeby
sprawdzić adres rutera pośredniczącego w połączeniu do konkretnego adresu ip
/// wydruk

opis 1 Przykład 3 -------------------------------------
segmentacja przez protokół tcp dzieli dane na kilka porcji ( segmentów).
w wire sharku nr 1, 2 to synchronizacja. w nr 4 adres wysyłającego wysyła 1448
bajtów danych a odbierający wysyła potwierdzenie poprzez wysłanie wartości o 
jeden większej niż liczba odebranch bajtów (1449 ). I tak dalej aż wszystko nie 
zostanie wysłane.
/// wydruk


opis 1 Przykład 4 -------------------------------------
w numerze 1 i 4 następuje synchronizacja, w nr6 wysyła datagram z danymi, w nr7
 odbierający wysyła potwierdzenie, dalej jest finalizacja przesyłania.
/// wydruk

opis 1 Przykład 5 -------------------------------------
flaga udp jest w ostatnim fragmencie, ponieważ pofragmentowane dane są wysyłane
od tyłu. we fragmencie 7 są dane w których jest nagłówek udp. offset pokazuje 
po jakim bajcie należy dany fragment ummiejscowić przy skladaniu fragmentow w 
całość.
/// wydruk

opis 1 Przykład 6 -------------------------------------
klient wysłął jedną paczkę danych. Brak fragmentacji, tylko jedna ramka wysłana.
/// wydruk

opis 1 Przykład 7 -------------------------------------
klient wysłął jedną paczkę danych. Brak fragmentacji, tylko jedna ramka wysłana.
/// wydruk

opis 1 Przykład 8 -------------------------------------
Klient wysyła prośbę o akceptację danych (seq, ack = 1 )
Od razu klient kończy połączenie i wysyła że nie ma więcej danych ( fin ), ( ack, seq = 1 )
Serwer wysyła po jakimś czasie fin ( ack = 2,ale seq = 1 )
Klient wysyła ack = 2, i już seq = 2
/// wydruk

opis 1 Przykład 9 -------------------------------------
Klient próbuje zsynchronizować nr sekwencji (syn) ale na tym porcie nie nasłuchuje
żadna aplikacja, więc serwer wysyła komunikat o resecie połączenia.
/// wydruk

opis 1 Zadanie 1 -------------------------------------
Ilość bajtów:
    TCP = 74 + 74 + 66 + 1066 + 66 + 66 + 66 + 66 = 1544
    UDP = 1042
/// wydruk

opis 1 Zadanie 2 -------------------------------------
2 razy, bo zostały wysłane od klienta 2 duże paczki danych, a pomiędzy nimi została
wysłana informacja PSH, że nie ma więcej danychu nadawcy.
/// wydruk

opis 1 Zadanie 3 -------------------------------------
ping requesty mają w nagłówku w polu typ 8, czyli Echo Request (żądanie echa)
ping reply ma w nagłówku w polu typ 0, czyli Echo Reply (zwrot echa – "odpowiedź na ping")
/// wydruk
opis 2 Przykład 1 -------------------------------------
najpier klient i serwer wymianiają informacje o terminalu, potem następuje prośba o login ze strony serwera, i poszczególne litery loginu są wysyłane w osobnych paczkach danych, nie są buforowane. Hasło tak samo. Hasło jest jawnie wysyłane.
/// wydruk

opis 2 Przykład 2 -------------------------------------
najpierw serwer wysyła info o rodzaju protokołu, potem wymianiają klucze, potem klient i serwer ustalają szczegóły diffie-helman group, nowe klucze, a potem już zaszysfrowane wiadomości
/// wydruk

opis 2 Przykład 3 -------------------------------------
ftp jest opakowany tcp. Za pomocą ftp-data można przesyłać dane. ftp zawiera komendy, ale kontrolą transmisji zajmuje się tcp
/// wydruk

opis 2 Przykład 4 -------------------------------------
procedura ssh wymienia klucze, i szyfruje połączenie, także gdzie zostały wysłane pliki można się domyślać po wielkości pakietow.
/// wydruk

opis 2 Przykład 5 -------------------------------------
za pomocą pop3 klen przesyła nazwę urzytkownika, hasło, proi o wylistowanie wiadomości, dostaje info że ma 0 wiadomości, przy próbie poprania wiadomości ( get 1 ) serwer wysyła wiadomość o tym że nie zna komendy get
/// wydruk

opis 2 Przykład 6 -------------------------------------
najpierw klientpyta serwer dns o adres z dolepionymi sufiksami związanymi z uniwersytetem, na końcu pyta o "goły adres" ( www.wp.pl ) i dostaje odpowiedź w której jest ades tej witryny
/// wydruk

opis 2 Przykład 7 -------------------------------------
klient pyta się serwera wysyłając o dane o witrynie, wysyłając jej adres do sprawdzenia, a serwer odpowiada wysyłając informacje o danym adresie IP, między innymi nazwę witryny.

opis 2 Przykład 8 -------------------------------------
tosamo co poprzednie, z tym ża nazwa witryny to wp.pl
/// wydruk

opis 2 Przykład 9 -------------------------------------
klient pyta się najpierw o nazwę adresu z sufiksami, nie otrzymał nic ciekawego, ale kiedy zapytał o "gołą" nazwę bez sufiksów, otrzymał adres IP, i 2 aliasy
/// wydruk

opis 2 Przykład 10 -------------------------------------
klient wysyła 3 zapytania http:
1. O kod html strony, otrzymuje ten kod
2. o obrazek example.jpg, który zostaje przesłany przez serwer za pomocą TCP
3. o favicon, ale nie zostaje znaleziony przez serwer
/// wydruk

opis 2 Przykład 11 -------------------------------------
to samo co w przykładzie 10, tylko w zapytaniu GET o obrazek, jest pytanie o modyfikację, i serwer wysyła że Not Modified, więc serwer nie wysyła obrazka, ponieważ klient ma go w plikach cookie.
/// wydruk

opis 2 Przykład 12 -------------------------------------
po wyczyszczeniu cache, klient pyta się o wszsytko tak jak w przykładzie 10, czyli nie pyta w GET o to czy plik został zmodyfikowany, a serwer wysyła poprostu ten plik.
/// wydruk

opis 2 Zadanie 1 -------------------------------------
Pliki (zasoby):
1. 200 OK, text/html line-based text data, rozmiar 179 bajtów( po rozpakowaniu, przed rozpakowaniem 147 bajtów w), przechowywane jako plik cookie
2. 404 not found, przy prośbie klienta o favicon ico, text/html line-based text data, rozmiar 297 bajtów( po rozpakowaniu, przed rozpakowaniem 244 bajtów w), przechowywane jako plik cookie
Typ przeglądarki: Chrome. W ilu sesjach TCP? W 3. Nazwa kanoniczna hosta: szmaragd.im.pwr.wroc.pl
/// wydruk

opis 2 Zadanie 2 -------------------------------------
login: testek2
hasło: poprostuXML
/// wydruk

opis 3 Przykład 1 -------------------------------------
Klient za pierwszym razem po prostu prosi o pobranie strony html, ale za drugim razem pyta się czy strona została zedytowana od czasu jak ją zapisał w cache, i dostał odp że nie została zmodyfikowana.
/// wydruk

opis 3 Przykład 2 -------------------------------------
Wariant aktywny różni się tym od wariantu pasywnego, że w wariancie aktywnym serwer otwiera losowy port u klienta, i wysyła na niego dane, a w trybie pasywnym to klient otwiera na serwerze port i potem otrzymuje z niego dane.
/// wydruk

opis 3 Przykład 3 -------------------------------------
Klient pyta się serwera dns o to czy istnieje adres internetowy atos w domenie sci.wmid.amu.edu.pl, otrzymuje odp że nie ma takiego adresu. Następnie klient pyta się czy istnieje adres "atos", serwer zgłasza błąd serwera.
/// wydruk